// <auto-generated />
using System;
using HistoryDemo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HistoryDemo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210515091054_ModifiedInit2")]
    partial class ModifiedInit2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("ModelEntities.BasicInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("PathToData")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SimConfigurationId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SimInitializationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SimConfigurationId");

                    b.HasIndex("SimInitializationId");

                    b.ToTable("BasicInformations");
                });

            modelBuilder.Entity("ModelEntities.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AngularRateController")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttitudeController")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttitudeFilter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisturbanceObserver")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuidanceController")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuidanceFilter")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeckCompensationEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWindEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrajactoryConfig")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseAttitudeTrackingDifferentiator")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseDisturbanceTypeI")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseL1Adaptive")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("ModelEntities.Initialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Alpha")
                        .HasColumnType("REAL");

                    b.Property<double>("P")
                        .HasColumnType("REAL");

                    b.Property<double>("Phi")
                        .HasColumnType("REAL");

                    b.Property<double>("Psi")
                        .HasColumnType("REAL");

                    b.Property<double>("PsiShip")
                        .HasColumnType("REAL");

                    b.Property<double>("Q")
                        .HasColumnType("REAL");

                    b.Property<double>("R")
                        .HasColumnType("REAL");

                    b.Property<double>("Theta")
                        .HasColumnType("REAL");

                    b.Property<double>("Vk")
                        .HasColumnType("REAL");

                    b.Property<double>("X")
                        .HasColumnType("REAL");

                    b.Property<double>("XShip")
                        .HasColumnType("REAL");

                    b.Property<double>("Y")
                        .HasColumnType("REAL");

                    b.Property<double>("YShip")
                        .HasColumnType("REAL");

                    b.Property<double>("Z")
                        .HasColumnType("REAL");

                    b.Property<double>("ZShip")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Initializations");
                });

            modelBuilder.Entity("ModelEntities.BasicInformation", b =>
                {
                    b.HasOne("ModelEntities.Configuration", "SimConfiguration")
                        .WithMany()
                        .HasForeignKey("SimConfigurationId");

                    b.HasOne("ModelEntities.Initialization", "SimInitialization")
                        .WithMany()
                        .HasForeignKey("SimInitializationId");

                    b.Navigation("SimConfiguration");

                    b.Navigation("SimInitialization");
                });
#pragma warning restore 612, 618
        }
    }
}
